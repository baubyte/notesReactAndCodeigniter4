{"version":3,"sources":["Components/Form.jsx","Components/Note.jsx","Components/Notes.jsx","Home.jsx","index.js"],"names":["Form","notes","setNotes","initialNote","id","title","body","initialError","useState","error","setError","note","setNote","className","onSubmit","event","preventDefault","trim","axios","post","then","payload","data","catch","errors","response","messages","addNote","htmlFor","value","type","onChange","target","Note","deleteNote","updateNote","modeEdit","setModeEdit","item","setItem","edit","a","name","href","onClick","toggle","Notes","newNotes","filter","delete","alert","newNote","put","map","length","Dashboard","useEffect","get","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.644316cc.chunk.js","sourcesContent":["import axios from 'axios';\nimport { useState, React } from 'react';\n\nconst Form = ({ notes, setNotes }) => {\n    //Estado Inicial\n    const initialNote = {\n        id: '',\n        title: '',\n        body: ''\n    }\n    //Estado inicial de los errores\n    const initialError= {\n        'title': '',\n        'body': '',\n    }\n    //Estado para pintar los errores\n    const [error, setError] = useState(initialError)\n    //Estado de una nota\n    const [note, setNote] = useState(initialNote)\n    const addNote = (event) => {\n        event.preventDefault();\n        //Validamos que no este vacio\n        if (note.title.trim() === \"\" || note.body.trim() === \"\") {\n            return;\n        }\n        //pasamos los datos\n        axios.post('http://localhost/api/notes', note)\n            .then((payload) => {\n                //actualizamos el estado asi pintamos la nueva nota\n                setNotes([\n                    //cargamos la notas anteriores\n                    ...notes,\n                    //cargamos la nueva nota\n                    payload.data.data\n                ]);\n                //Blanqueamos los Inputs\n                setNote(initialNote);\n                setError(initialError);\n            })\n            .catch((errors) => {\n                //capturamos los errores\n                //const {title,body} = errors.response.data.message;\n                setError(errors.response.data.messages);\n            });\n        /* setNotes([\n            //El Estado de todas las notas\n            ...notes,\n            {\n                //El estado de la nota actual\n                ...note,\n                id: notes.length > 0 ? Math.max(...notes.map(note => note.id)) + 1 : 1\n            }\n        ]) \n        //Blanqueamos los Inputs\n        setNote(initialNote);*/\n    }\n    return (\n        <div className=\"has-background-success-light p-3\">\n            <form onSubmit={(event) => addNote(event)}>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"title\">\n                        Titulo\n                    </label>\n                    <div className=\"control\">\n                        <input className=\"input\" id=\"title\" value={note.title} type=\"text\" onChange={(event) => setNote({ ...note, title: event.target.value })} />\n                    </div>\n                    <span className=\"help is-danger\">\n                        {error.title}\n                    </span>\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"body\">\n                        Cuerpo\n                    </label>\n                    <div className=\"control\">\n                        <textarea className=\"textarea\" id=\"body\" value={note.body} type=\"text\" onChange={(event) => setNote({ ...note, body: event.target.value })}></textarea>\n                    </div>\n                    <span className=\"help is-danger\">\n                        {error.body}\n                    </span>\n                </div>\n                <button className=\"button is-success\" >Agregar Nota</button>\n            </form>\n        </div>\n    )\n}\nexport default Form;","import { useState, React } from 'react';\n\nconst Note = ({ note, deleteNote, updateNote, setError, error, initialError }) => {\n    const [modeEdit, setModeEdit] = useState(false)\n    const [item, setItem] = useState(note)\n    //Habilitar o deshabilitar \n    const toggle = (event) => {\n        event.preventDefault();\n        setModeEdit(!modeEdit);\n        setError(initialError);\n        setItem(note);\n    }\n    //Modo editar\n    const edit = async (event) => {\n        event.preventDefault();\n        //si se pudo actualizar la nota cerramos el modo edicion\n        if(await updateNote(item)){\n            setModeEdit(false);\n        }\n    }\n    return (\n        <div className=\"column is-one-quarter\">\n            <div className=\"card\">\n                <header className=\"card-header\">\n                    <p className=\"card-header-title\">\n                        ID: {note.id}\n                    </p>\n                </header>\n                <div className=\"card-content\">\n                        {\n                            modeEdit ?\n                            <div className=\"field\">\n                                <label className=\"label\" htmlFor=\"title-card\">\n                                    Titulo\n                                </label>\n                                <div className=\"control\">\n                                <input name=\"title-card\" className=\"input\" type=\"text\" value={item.title} onChange={(event) => setItem({ ...item, title: event.target.value })} />\n                                </div>\n                                <span className=\"help is-danger\">\n                                    {error.title}\n                                </span>\n                            </div>\n                                : <div> Titulo: {note.title} </div>\n                        }\n                        {\n                            modeEdit ?\n                            <div className=\"field\">\n                                <label className=\"label\" htmlFor=\"bodyCard\">\n                                    Cuerpo\n                                </label>\n                                <div className=\"control\">\n                                <textarea name=\"bodyCard\" className=\"textarea\" type=\"text\" value={item.body} onChange={(event) => setItem({ ...item, body: event.target.value })}></textarea>\n                                </div>\n                                <span className=\"help is-danger\">\n                                    {error.body}\n                                </span>\n                            </div>\n                                : <div> Cuerpo: {note.body}</div>\n                        }\n                </div>\n                <footer className=\"card-footer\">\n                    <a href={'/'} onClick={(event) => toggle(event)} className=\"card-footer-item\">{modeEdit ? 'Cancelar' : 'Editar'}</a>\n                    {\n                        modeEdit ?\n                        //Boton guardar solo cuando esta activo el modo editar\n                        <a href={'/'} onClick={(event) => edit(event)} className=\"card-footer-item\">Guardar</a>\n                        :\n                        //Boton eliminar solo cuando no esta activo el modo editar\n                        <a href={'/'} onClick={(event) => deleteNote(note.id,event)} className=\"card-footer-item\">Eliminar</a>\n                    }\n                </footer>\n            </div>\n        </div>\n    )\n}\nexport default Note;","import axios from 'axios';\nimport {useState,React} from 'react';\nimport Note from './Note'\n\nconst Notes = ({notes, setNotes}) => {\n    //Estado inicial de los errores\n    const initialError= {\n        'title': '',\n        'body': '',\n    }\n    //Estado para pintar los errores\n    const [error, setError] = useState(initialError)\n    const deleteNote = (id,event) =>{\n        const newNotes = notes.filter(note => id !== note.id);\n        event.preventDefault();\n        axios.delete(`http://localhost/api/notes/${id}`).then(payload =>{\n            alert(payload.data.messages);\n            setNotes(newNotes);\n        }).catch(errors =>{\n            alert(errors.response.data.messages);\n        });\n    }\n    const updateNote = (newNote) =>{\n        let response = axios.put(`http://localhost/api/notes/${newNote.id}`,newNote).then(payload =>{\n            //Capturamos el id\n            let {id} = payload.data.data;\n            setNotes(\n                //Iteramos y vemos cuando el id es igual y lo modificamos\n                notes.map(note => note.id === id ? payload.data.data : note)\n            );\n            setError(initialError);\n            return true;\n\n        }).catch(errors =>{\n            //capturamos los errores\n            setError(errors.response.data.messages);\n            return false;\n        })\n        //Retornamos la variable de axios\n        return response;\n        /* setNotes(\n            //Iteramos y vemos cuando el id es igual y lo modificamos\n            notes.map(note => note.id === newNote.id ? newNote : note)\n        ); */\n    }\n    return (\n        notes.length > 0 ?\n        <div className=\"columns is-multiline\">\n        {\n            notes.map(note => {\n                return <Note key={note.id} note={note} deleteNote={deleteNote} updateNote={updateNote} setError={setError} error={error} initialError= {initialError}></Note>;\n            })\n        }\n    </div>\n    : <p className=\"has-text-centered subtitle\">No existen Notas</p>\n    )\n}\nexport default Notes;","import { useState, useEffect, React } from 'react';\nimport Form from './Components/Form';\nimport Notes from './Components/Notes';\nimport axios from 'axios';\n\n\nexport default function Dashboard(){\n    //Hooks Effect se ejecuta despues de cargar todo el dom\n    useEffect(() => {\n        axios.get('http://localhost/api/notes').then((payload)=>{\n            setNotes(payload.data);\n        }).catch((error)=>{\n            console.log(error);\n        })\n    }, [])\n    //Hooks states\n    const [notes, setNotes] = useState([]);\n    //Cambiar el estado\n    /* const changeState = ()=>{\n        const reg = { id: 6, title: 'nota6', body: 'cuerpo nota 6' };\n        setNotes( notes.concat(reg));\n    } */\n    return (\n        <div className=\"container\">\n            <h1 className=\"title has-text-centered mt-5\">Listado de Notas</h1>\n            <Notes notes={notes} setNotes={setNotes}></Notes>\n            <Form notes={notes} setNotes={setNotes}></Form>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Dashboard from './Home';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard></Dashboard>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}